from e3.anod.helper import Make
from e3.anod.loader import spec
from e3.anod.spec import Anod
from e3.fs import cp, mkdir, rm, sync_tree
import os


class WellClear(spec('github')):

    @property
    def build_deps(self):
        return [Anod.Dependency('compiler'),
                Anod.Dependency('cmake')]

    github_project = 'wellclear'

    @Anod.primitive()
    def build(self):
        src_dir = os.path.join(self.build_space.src_dir, 'DAIDALUS', 'C++')
        make = Make(self, exec_dir=src_dir)
        make.set_var('CXX', 'g++')
        make.set_var('CXXFLAGS', '-Iinclude -std=c++11 -Wall -O')
        make('lib')
        cp(os.path.join(src_dir, 'lib', 'DAIDALUS.a'),
           os.path.join(src_dir, 'lib', 'libdaidalus.a'))
        rm(self.build_space.install_dir, recursive=True)
        mkdir(self.build_space.install_dir)
        sync_tree(os.path.join(src_dir, 'lib'),
                  os.path.join(self.build_space.install_dir, 'lib'))
        sync_tree(os.path.join(src_dir, 'lib'),
                  os.path.join(self.build_space.install_dir, 'lib64'))
        sync_tree(os.path.join(src_dir, 'include'),
                  os.path.join(self.build_space.install_dir, 'include'))

